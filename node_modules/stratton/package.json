{
  "name": "stratton",
  "description": "A cross-platform push service interface for Node.js",
  "version": "1.0.0",
  "author": {
    "name": "Mikel Del Tio",
    "email": "mikeldeltio@outlook.com"
  },
  "keywords": [
    "apple",
    "google",
    "microsoft",
    "ios",
    "android",
    "wphone",
    "apns",
    "gcm",
    "mpns",
    "notifications",
    "push",
    "push notifications"
  ],
  "main": "./lib/stratton",
  "bugs": {
    "url": "https://github.com/MikelDelTio/Stratton",
    "email": "mikeldeltio@outlook.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MikelDelTio/Stratton"
  },
  "dependencies": {
    "apn": "*",
    "node-gcm": "*",
    "mpns": "*",
    "node-parallel": "*"
  },
  "engines": {
    "node": "*"
  },
  "readme": "Stratton\r\n========\r\n\r\nA Node.js module for interfacing with Apple Push Notification, Google Cloud Messaging and Microsoft Push Notification services.\r\n\r\n## Installation \r\n$ npm install stratton\r\n\r\n#Features\r\n<ul>\r\n<li>Powerful and intuitive.</li>\r\n<li>Multi platform push sends.</li>\r\n<li>Automatically detects destination device type.</li>\r\n<li>Unified error handling.</li>\r\n</ul>\r\n\r\n## Usage \r\nFirst of all:\r\n```\r\nIOS: replace cert.txt and key.txt files on stratton folder with your cert.pem and key.pem. \r\nANDROID: Add to SETTINGS.js your API SERVER KEY  on stratton folder.\r\n```\r\nImport stratton module:\r\n```\r\nvar stratton = requiere('stratton);\r\n```\r\n\r\nDefine destination device ID. You can send to multiple devices, independently of platform, creating an array with different destination device IDs.\r\n```\r\n// Single destination\r\npushId = 'INSERT_YOUR_DEVICE_ID';\r\n\r\n// Multiple destinations\r\npushId = [];\r\npushId.push('INSERT_YOUR_DEVICE_ID');\r\npushId.push('INSERT_OTHER_DEVICE_ID');\r\n```\r\n\r\nNext, create a JSON object witch MUST contain, at least, a title and message. \r\n```\r\ndata = {title: 'My First Push' , message: 'Powered by stratton', otherfields: 'add more fields if you want');\r\n```\r\nFinally send a push notificacion and catch response:\r\n```\r\nstratton.sendPush(pushId, data, function (result){\r\n\tconsole.log(result);\r\n});\r\n```\r\nResult will contain 'true' or 'an error description'.\r\n\r\n\r\n##Resources\r\n<ul>\r\n<li> <a href=\"http://aerogear.org/docs/guides/aerogear-push-android/google-setup/\"> Google Cloud Messaging setup guide</a> </li>\r\n<li> <a href=\"http://aerogear.org/docs/guides/aerogear-push-ios/app-id-ssl-certificate-apns/\"> Apple Push Notification setup guide Part 1</a> </li>\r\n<li> <a href=\"https://github.com/argon/node-apn/wiki/Preparing-Certificates\"> Apple Push Notification setup guide Part 2</a> </li>\r\n</ul>",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/MikelDelTio/Stratton",
  "_id": "stratton@1.0.0",
  "dist": {
    "shasum": "ec11d0e85b727112b5a4f83adcea9a8f033ba3d0"
  },
  "_from": "stratton@",
  "_resolved": "https://registry.npmjs.org/stratton/-/stratton-1.0.0.tgz"
}
